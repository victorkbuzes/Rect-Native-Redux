import type { ReactTestInstance } from 'react-test-renderer';
import type { FindAllByQuery, FindByQuery, GetAllByQuery, GetByQuery, QueryAllByQuery, QueryByQuery } from './makeQueries';
declare type A11yValue = {
    min?: number;
    max?: number;
    now?: number;
    text?: string;
};
export declare type ByA11yValueQueries = {
    getByA11yValue: GetByQuery<A11yValue>;
    getAllByA11yValue: GetAllByQuery<A11yValue>;
    queryByA11yValue: QueryByQuery<A11yValue>;
    queryAllByA11yValue: QueryAllByQuery<A11yValue>;
    findByA11yValue: FindByQuery<A11yValue>;
    findAllByA11yValue: FindAllByQuery<A11yValue>;
    getByAccessibilityValue: GetByQuery<A11yValue>;
    getAllByAccessibilityValue: GetAllByQuery<A11yValue>;
    queryByAccessibilityValue: QueryByQuery<A11yValue>;
    queryAllByAccessibilityValue: QueryAllByQuery<A11yValue>;
    findByAccessibilityValue: FindByQuery<A11yValue>;
    findAllByAccessibilityValue: FindAllByQuery<A11yValue>;
};
export declare const bindByA11yValueQueries: (instance: ReactTestInstance) => ByA11yValueQueries;
export {};
