"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindByRoleQueries = void 0;

var _matchStringProp = require("../helpers/matchers/matchStringProp");

var _makeQueries = require("./makeQueries");

const queryAllByRole = instance => function queryAllByRoleFn(role) {
  return instance.findAll(node => typeof node.type === 'string' && (0, _matchStringProp.matchStringProp)(node.props.accessibilityRole, role));
};

const getMultipleError = role => `Found multiple elements with accessibilityRole: ${String(role)} `;

const getMissingError = role => `Unable to find an element with accessibilityRole: ${String(role)}`;

const {
  getBy,
  getAllBy,
  queryBy,
  queryAllBy,
  findBy,
  findAllBy
} = (0, _makeQueries.makeQueries)(queryAllByRole, getMissingError, getMultipleError);

const bindByRoleQueries = instance => ({
  getByRole: getBy(instance),
  getAllByRole: getAllBy(instance),
  queryByRole: queryBy(instance),
  queryAllByRole: queryAllBy(instance),
  findByRole: findBy(instance),
  findAllByRole: findAllBy(instance)
});

exports.bindByRoleQueries = bindByRoleQueries;
//# sourceMappingURL=role.js.map